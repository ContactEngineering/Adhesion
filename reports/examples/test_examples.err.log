Traceback (most recent call last):
  File "/home/runner/work/Adhesion/venv/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/runner/work/Adhesion/venv/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/work/Adhesion/venv/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/Adhesion/venv/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/work/Adhesion/venv/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/work/Adhesion/venv/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/work/Adhesion/venv/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

import pathlib
import runpy
import pytest
import subprocess

basedir = pathlib.Path(__file__,'..',).resolve()
# print(scripts)
scripts = basedir.glob('*.py')

@pytest.mark.parametrize('script', scripts)
def test_script_execution( script):
    runpy.run_path(str(script))
    # call = f"jupytext --to notebook --output - {script} | jupyter nbconvert --execute --allow-errors -y --stdin --to=html --output={script.name}.html".split(" ")
    # assert subprocess.check_call(call, env=env, shell=True) == 0

notebooks = basedir.glob('*.ipynb')
@pytest.mark.parametrize('nb', notebooks)
def test_notebooks_execution(nb):
    path = str(nb)
    assert subprocess.check_call(['jupytext', '--to', 'py', path],) == 0

    runpy.run_path(path.removesuffix(".ipynb") + ".py")
------------------


[31m---------------------------------------------------------------------------[39m
[31mModuleNotFoundError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 3[39m
[32m      1[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mpathlib[39;00m
[32m      2[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mrunpy[39;00m
[32m----> [39m[32m3[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mpytest[39;00m
[32m      4[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01msubprocess[39;00m
[32m      6[39m basedir = pathlib.Path([34m__file__[39m,[33m'[39m[33m..[39m[33m'[39m,).resolve()

[31mModuleNotFoundError[39m: No module named 'pytest'

